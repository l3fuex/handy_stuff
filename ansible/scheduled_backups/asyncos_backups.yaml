---
- name: get timestamp from localhost
  hosts: localhost
  gather_facts: true

- name: asyncos backups
  hosts: asyncos

  pre_tasks:
    - name: ensure the destination directory exists
      file:
        path: "{{ basedir }}/{{ inventory_hostname }}"
        state: directory
      delegate_to: localhost
  
  tasks:
    - name: generate a new config file in cluster mode
      raw: clustermode cluster; saveconfig yes
      register: cluster_output
      when: cluster_member == true

    - name: generate a new config file in machine mode
      raw: saveconfig yes
      register: machine_output
      when: cluster_member == false

    - name: parse config file path
      set_fact:
        config_file_path: "/configuration/{{ cluster_output.stdout | regex_search('[0-9A-Z-]*\\.xml') }}"
      when: cluster_member == true

    - name: parse config file path from machine output
      set_fact:
        config_file_path: "/configuration/{{ machine_output.stdout | regex_search('[0-9A-Z-]*\\.xml') }}"
      when: cluster_member == false

    - name: copy config file to backup directory
      shell: >-
        curl -u {{ ansible_user }}:{{ ansible_password }} ftp://{{ 
        inventory_hostname }}{{ config_file_path }} -o {{ 
        basedir }}/{{ inventory_hostname }}/{{ inventory_hostname }}_{{ 
        hostvars['localhost'].ansible_date_time.date }}.xml
      delegate_to: localhost
      no_log: true

  post_tasks:
    - name: delete config file on remote system
      shell: "curl -u {{ ansible_user }}:{{ ansible_password }} ftp://{{ inventory_hostname }}/ -Q \"DELE {{ config_file_path }}\""
      delegate_to: localhost
      no_log: true

    - name: compress running config
      archive:
        path: >-
          {{ basedir }}/{{ inventory_hostname }}/{{ inventory_hostname }}_{{ 
          hostvars['localhost'].ansible_date_time.date }}.xml
        dest: >-
          {{ basedir }}/{{ inventory_hostname }}/{{ inventory_hostname }}_{{ 
          hostvars['localhost'].ansible_date_time.date }}.tar.gz
        format: gz
        force_archive: true
        remove: true
      delegate_to: localhost

    - name: delete files that are older than the retention period
      shell: "find {{ basedir }}/{{ inventory_hostname }} -type f -mtime +{{ retention_time }} -exec rm {} \\;"
      delegate_to: localhost
